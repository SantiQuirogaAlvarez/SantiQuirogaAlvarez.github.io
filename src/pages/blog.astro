---
import { getCollection } from "astro:content";
import Base from "../layouts/Base.astro";
import Navbar from "../components/Navbar.astro";
import Footer from "../components/Footer.astro";
const posts = await getCollection("blog");
const postsSorted = posts.sort((a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime());
// Helper to validate URLs (only allow internal links)
function isSafeUrl(url: string | undefined) {
  return typeof url === 'string' && url.startsWith('/');
}
---
<Base title="Blog" description="Latest articles and reflections.">
  <Fragment slot="nav">
    <Navbar />
  </Fragment>
  <h1 class="text-4xl font-extrabold tracking-tight mb-6 text-center">Blog</h1>
  <p class="text-zinc-400 text-center mb-8">
    Rants and thoughts from an opinionated engineer.<br>
    <span class="bg-gradient-to-r from-[var(--ctp-lavender)] to-[var(--ctp-mauve)] bg-clip-text text-transparent font-bold">~ Santi</span>
  </p>
  <hr class="border-[var(--border)] mb-8" />
  <div class="max-w-2xl mx-auto">
    {postsSorted.map((post, idx) => (
      <>
        {idx !== 0 && <hr class="border-[var(--border)] my-8" />}
  <a href={`/blog/${post.id}`} class="block group no-underline">
          <article class="transition-shadow hover:shadow-lg p-0">
            <h2 class="text-2xl font-bold mb-2 group-hover:underline text-[var(--ctp-mauve)]">{post.data.title}</h2>
            {post.data.description && <p class="text-zinc-400 mb-2">{post.data.description}</p>}
            <div class="flex items-center text-sm text-zinc-500 mb-2">
              <span class="mr-2">🗓️ {post.data.date}</span>
              {post.data.tags && post.data.tags.map((tag: string) => (
                <span class="bg-purple-700 text-white px-2 py-1 rounded ml-2">#{tag}</span>
              ))}
            </div>
          </article>
        </a>
      </>
    ))}
    <hr class="border-[var(--border)] mt-8" />
  </div>
  <Fragment slot="footer">
    <Footer />
  </Fragment>
</Base>
